{"version":3,"sources":["components/ListItemComponent.js","components/ListComponent.js","components/HeaderComponent.js","components/MainContainer.js","App.js","serviceWorker.js","index.js"],"names":["ListItem","props","className","onClick","destinationId","moveCurriculum","curriculumId","outdentCurriculum","indentCurriculum","deleteCurriculum","style","width","height","defaultValue","curriculumContent","placeholder","onChange","onBlur","event","updateCurriculum","target","value","List","curriculumlist","traverseTree","data","tempChild","tempTitle","tempChildList","hasOwnProperty","React","createElement","key","id","content","sourceId","length","push","type","renderList","Header","Main","state","idIndexMap","parentChildMap","count","addCurriculum","bind","deleteCurriculumNode","updateCurriculumTree","generatePath","outdentCurriculumNode","indentCurriculumNode","mapParentChildId","mapIdIndex","updateMap","tempCurriculumList","this","tempParentChildMap","tempIdIndexMap","setState","parent","Number","index","path","splice","newTitle","childNode","pathIndex","tempData","pop","newCurriculum","text","console","log","href","encodeURIComponent","JSON","stringify","download","Component","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c4609bd2.chunk.js","sourcesContent":["import React from \"react\";\nimport ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\nimport ArrowForwardIcon from \"@material-ui/icons/ArrowForward\";\nimport DragIndicatorIcon from \"@material-ui/icons/DragIndicator\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport \"../shared/style.css\";\n\nconst ListItem = (props) => {\n\n    function indentCurriculum() {\n        props.indentCurriculum(props.curriculumId)\n    }\n\n    function outdentCurriculum() {\n        props.outdentCurriculum(props.curriculumId)\n    }\n\n    function deleteCurriculum() {\n        props.deleteCurriculum(props.curriculumId)\n    }\n\n    function updateCurriculum(event) {\n        props.updateCurriculum(props.curriculumId, event.target.value)\n    }\n\n    function moveCurriculum(destinationId) {\n        props.moveCurriculum(props.curriculumId, destinationId)\n    }\n\n    function handleChangeEvent(val) {\n        return val\n    }\n\n    return(\n        <div className=\"container\">\n            <div className=\"col-2 icons-set\">\n                <button className=\"icon-button\" onClick={moveCurriculum}>\n                    <div className=\"tooltip\">\n                        <DragIndicatorIcon />\n                        <span className=\"tooltip-text\">Move</span>\n                    </div>\n                </button>\n                <button className=\"icon-button\" onClick={outdentCurriculum} >\n                    <div className=\"tooltip\">\n                        <ArrowBackIcon />\n                        <span className=\"tooltip-text\">Outdent</span>\n                    </div>\n                </button>\n                <button className=\"icon-button\" onClick={indentCurriculum} >\n                    <div className=\"tooltip\">\n                        <ArrowForwardIcon />\n                        <span className=\"tooltip-text\">Indent</span>\n                    </div>\n                </button>\n                <button className=\"icon-button\" onClick={deleteCurriculum} >\n                    <div className=\"tooltip\">\n                        <DeleteIcon />\n                        <span className=\"tooltip-text\">Delete</span>\n                    </div>\n                </button>\n            </div>\n            <div className=\"col-2\">\n                <div style={{width: 200, height: 50}}></div>\n            </div>\n            <div className=\"col-10 list-content\">\n                <div className=\"divider\" >\n                </div>\n                <div className=\"list-text\">\n                    <input \n                        defaultValue={props.curriculumContent} \n                        placeholder=\"Enter curriculum\" \n                        onChange={() => handleChangeEvent(props.curriculumContent)}\n                        onBlur={updateCurriculum}\n                    />\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default ListItem;","import React from \"react\";\nimport ListItem from './ListItemComponent';\n\nconst List = (props) => {\n\n    // For Drag and drop\n\n    function renderList({curriculumlist, deleteCurriculum, indentCurriculum, outdentCurriculum, updateCurriculum, moveCurriculum}) {\n       \n        function traverseTree(data) {\n            var tempChildList = [], tempChild, tempTitle;\n            if (data.hasOwnProperty(\"child\")){\n\n                tempTitle = React.createElement(\"div\", {key: data[\"id\"]}, \n                <ListItem\n                    key={data[\"id\"]}\n                    curriculumId={data[\"id\"]}\n                    curriculumContent={data[\"title\"]}\n                    deleteCurriculum={(id) => deleteCurriculum(id)}\n                    indentCurriculum={(id) => indentCurriculum(id)}\n                    outdentCurriculum={(id) => outdentCurriculum(id)}\n                    updateCurriculum={(id, content) => updateCurriculum(id, content)}\n                    moveCurriculum={(sourceId, destinationId) => moveCurriculum(sourceId, destinationId)}\n                />)\n               \n                if(data[\"child\"].length > 0) {\n                    tempChildList = traverseTree(data[\"child\"])\n                    return React.createElement(\"li\", {className: \"dd-item\", 'data-id': data[\"id\"]}, [tempTitle, tempChildList]) \n                    \n                } else {\n                    return React.createElement(\"li\", {className: \"dd-item\", 'data-id': data[\"id\"]}, tempTitle)\n                }\n            }\n            else {\n                for(var key in data) {\n                    tempChild = traverseTree(data[key])\n                    tempChildList.push(tempChild)\n                }\n                return React.createElement(\"ul\", {className: \"dd-list\", type: \"none\"}, tempChildList)\n            }\n          }\n\n        return(\n           traverseTree(curriculumlist)\n        )\n    }\n\n   // console.log(props.curriculumlist)\n\n    return(\n        <div className=\"list-container\">\n            { renderList(props) }\n        </div>\n    );\n}\n\nexport default List;","import React from 'react';\nimport '../shared/style.css';\n\nconst Header = () => {\n\n    return(\n        <>\n        <div className=\"course-name\">\n            MATHEMATICS\n        </div>\n        <div className=\"header container\">\n            <div className=\"col-2\">\n                <div className=\"title\">Actions</div>\n                <div className=\"subtitle\">\n                    Move, Indent, Outdent, Delete\n                </div>\n            </div>\n            <div className=\"col-10\">\n                <div className=\"title\">Standard</div>\n                <div className=\"subtitle\">\n                    The text of the standard\n                </div>\n            </div>\n        </div>\n       </>\n    )\n}\n\nexport default Header;","import React, { Component } from \"react\";\nimport List from \"./ListComponent\";\nimport Header from \"./HeaderComponent\";\nimport data from \"../shared/data.json\";\nimport '../shared/style.css';\nimport AddCircleOutlineIcon from \"@material-ui/icons/AddCircleOutline\";\n\nclass Main extends Component {\n\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            curriculumlist : data[\"curriculum\"],\n            idIndexMap: {},\n            parentChildMap: {},\n            count: 6\n        }\n\n        this.addCurriculum = this.addCurriculum.bind(this)\n        this.deleteCurriculum = this.deleteCurriculum.bind(this)\n        this.updateCurriculum = this.updateCurriculum.bind(this)\n        this.moveCurriculum = this.moveCurriculum.bind(this)\n        this.indentCurriculum = this.indentCurriculum.bind(this)\n        this.outdentCurriculum = this.outdentCurriculum.bind(this)\n\n        this.deleteCurriculumNode = this.deleteCurriculumNode.bind(this)\n        this.updateCurriculumTree = this.updateCurriculumTree.bind(this)\n        this.generatePath = this.generatePath.bind(this)\n        this.outdentCurriculumNode = this.outdentCurriculumNode.bind(this)\n        this.indentCurriculumNode = this.indentCurriculumNode.bind(this)\n        this.mapParentChildId = this.mapParentChildId.bind(this)\n        this.mapIdIndex = this.mapIdIndex.bind(this)\n        this.updateMap = this.updateMap.bind(this)\n    }\n\n    // componentDidMount() {\n    //     var items = document.querySelectorAll(\"ul\");\n    //     items.forEach(item => {\n    //         item.draggable = true\n    //         item.addEventListener(\"dragover\", (event) => {\n    //             console.log(event.target.innerHTML)\n    //         }, true)\n    //     })\n    // }\n\n    updateMap() {\n        var tempCurriculumList = this.state.curriculumlist\n        var tempParentChildMap = this.state.parentChildMap\n        var tempIdIndexMap = this.state.idIndexMap\n\n        this.mapParentChildId(0, tempParentChildMap, tempCurriculumList)\n        this.mapIdIndex(null, tempIdIndexMap, tempCurriculumList)\n        this.setState({\n            parentChildMap: tempParentChildMap,\n            idIndexMap: tempIdIndexMap\n        })\n    }\n\n\n    UNSAFE_componentWillMount() {\n        var tempCurriculumList = this.state.curriculumlist\n        var tempParentChildMap = this.state.parentChildMap\n        var tempIdIndexMap = this.state.idIndexMap\n\n        this.mapParentChildId(0, tempParentChildMap, tempCurriculumList)\n        this.mapIdIndex(null, tempIdIndexMap, tempCurriculumList)\n        this.setState({\n            parentChildMap: tempParentChildMap,\n            idIndexMap: tempIdIndexMap\n        })\n    }\n\n    mapParentChildId(parent, parentChildMap, data) {\n        if (data.hasOwnProperty(\"child\")){\n            \n            parentChildMap[data[\"id\"]] = Number(parent)\n            \n            if(data[\"child\"].length > 0) {\n                parent = data[\"id\"]\n                this.mapParentChildId(parent, parentChildMap, data[\"child\"])\n            } \n        }\n        else {\n            for(var key in data) {\n                this.mapParentChildId(parent, parentChildMap, data[key])\n            }\n        }\n    }\n\n    mapIdIndex(index, idIndexMap, data) {\n        if (data.hasOwnProperty(\"child\")){\n            \n            idIndexMap[data[\"id\"]] = Number(index)\n            \n            if(data[\"child\"].length > 0) {\n                this.mapIdIndex(null, idIndexMap, data[\"child\"])\n            } \n        }\n        else {\n            for(var key in data) {\n                this.mapIdIndex(key, idIndexMap, data[key])\n            }\n        }\n    }\n\n\n    generatePath(id, idIndexMap, parentChildMap) {\n        var path = [];\n        while(parentChildMap[id] !== 0) {\n            path.push(idIndexMap[id])\n            id = parentChildMap[id]\n        }\n        path.push(idIndexMap[id])\n    \n        return path;\n    }\n\n    deleteCurriculumNode(id, data) {\n        if (data.hasOwnProperty(\"child\")){\n            if(data[\"child\"].length > 0) {\n                this.deleteCurriculumNode(id, data[\"child\"])\n            } else\n                return;\n        } else {\n            for(var key in data) {\n                if(data[key][\"id\"] == id) {\n                    data.splice(key, 1)\n                    return;\n                }\n                this.deleteCurriculumNode(id, data[key])\n            }\n        }        \n    }\n\n    updateCurriculumTree(id, newTitle, data) {\n        if (data.hasOwnProperty(\"child\")){\n            if(data[\"id\"] == id) {\n                data[\"title\"] = newTitle\n                return;\n            } else if(data[\"child\"].length > 0) {\n                this.updateCurriculumTree(id, newTitle, data[\"child\"])\n            }\n        }\n        else {\n            for(var key in data) {\n                this.updateCurriculumTree(id, newTitle, data[key])\n            }\n        }\n    }\n\n    outdentCurriculumNode(path, data) {\n        var childNode, pathIndex, tempData\n        if( path.length > 2 ){\n            pathIndex = path.pop()\n            tempData = data[pathIndex][\"child\"]\n            this.outdentCurriculumNode(path, tempData)\n        } else if ( path.length == 2 ) {\n            pathIndex = path.pop()\n            childNode = data[pathIndex][\"child\"][path[0]]\n            data[pathIndex][\"child\"].splice(path[0], 1)\n            data.splice(pathIndex+1, 0, childNode)\n        } else\n            return;\n    }\n\n    indentCurriculumNode(path, data) {\n        var childNode, pathIndex, tempData\n        if( path.length > 1){\n            pathIndex = path.pop()\n            tempData = data[pathIndex][\"child\"]\n            this.indentCurriculumNode(path, tempData)\n        } else if ( path.length == 1 && path[0] > 0 ) {\n            childNode = data[path[0]]\n            data.splice(path[0], 1)\n            data[path[0]-1][\"child\"].push(childNode)\n        } else\n            return;\n    }\n\n    addCurriculum() {\n        var newCurriculum = {\n            \"id\": this.state.count,\n            \"title\": \"Enter Curriculum\",\n            \"child\": []\n        }\n\n        var tempCurriculumList = this.state.curriculumlist\n\n        tempCurriculumList.push(newCurriculum)\n\n        this.setState({\n            count: this.state.count + 1,\n            curriculumlist: tempCurriculumList\n        })\n\n        this.updateMap()\n    }\n\n    deleteCurriculum(id) {\n        var tempCurriculumList = this.state.curriculumlist\n        \n        this.deleteCurriculumNode(id, tempCurriculumList)\n\n        this.setState({\n            curriculumlist: tempCurriculumList\n        })\n\n        this.updateMap()\n    }\n\n    updateCurriculum(id, text) {\n        var tempCurriculumList = this.state.curriculumlist\n\n        this.updateCurriculumTree(id, text, tempCurriculumList)\n\n        this.setState({\n            curriculumlist: tempCurriculumList\n        })\n    }\n\n    indentCurriculum(id) {\n        var tempCurriculumList = this.state.curriculumlist\n        var path = this.generatePath(id, this.state.idIndexMap, this.state.parentChildMap)\n        this.indentCurriculumNode(path, tempCurriculumList)\n        this.setState({\n            curriculumlist: tempCurriculumList\n        })\n\n        this.updateMap()\n    }\n\n    outdentCurriculum(id) {\n        var tempCurriculumList = this.state.curriculumlist\n        var path = this.generatePath(id, this.state.idIndexMap, this.state.parentChildMap)\n        this.outdentCurriculumNode(path, tempCurriculumList)\n        this.setState({\n            curriculumlist: tempCurriculumList\n        })\n\n        this.updateMap()\n    }\n\n\n    moveCurriculum(sourceId, destinationId) {\n        console.log(\"moveCurriculum\");\n    }\n\n    render () {\n        return(\n            <div className=\"container course\">\n                <div className=\"col-2\"></div>\n                <div className=\"col-8\">\n                    <Header />\n                    <List \n                        curriculumlist={this.state.curriculumlist} \n                        deleteCurriculum={(id) => this.deleteCurriculum(id)}\n                        indentCurriculum={(id) => this.indentCurriculum(id)}\n                        outdentCurriculum={(id) => this.outdentCurriculum(id)}\n                        updateCurriculum={(id, content) => this.updateCurriculum(id, content)}\n                        moveCurriculum={(sourceId, destinationId) => this.moveCurriculum(sourceId, destinationId)}\n                    />\n                    <button className=\"button flex-container\" onClick={this.addCurriculum}>\n                        <div className=\"button-icon\">\n                            <AddCircleOutlineIcon /> \n                        </div>\n                        <div className=\"button-text\">Add a standard</div>\n                    </button>\n                    <a href={\"data:text/json;charset=utf-8,\"+ encodeURIComponent(JSON.stringify({\"curriculum\": this.state.curriculumlist}))} download=\"data.json\">\n                        <button className=\"button flex-container\">\n                            <div className=\"button-text\">Download JSON data</div>\n                        </button>\n                    </a>\n                </div>\n                <div className=\"col-2\"></div>\n            </div>\n        );\n    }\n}\n\nexport default Main;","import React from 'react';\nimport Main from './components/MainContainer';\n\nfunction App() {\n  return (\n    <Main/>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}