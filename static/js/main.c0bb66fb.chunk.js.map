{"version":3,"sources":["components/ListItemComponent.js","components/ListComponent.js","components/HeaderComponent.js","components/MainContainer.js","App.js","serviceWorker.js","index.js"],"names":["ListItem","props","className","onMouseDown","enableDrag","curriculumId","onClick","outdentCurriculum","indentCurriculum","deleteCurriculum","defaultValue","curriculumContent","placeholder","onChange","onBlur","event","updateCurriculum","target","value","List","disableDrag","e","stopPropagation","currentTarget","removeAttribute","drag","dataTransfer","setData","dataset","id","allowDrop","preventDefault","drop","srcId","destId","getData","moveCurriculum","document","querySelector","curriculumlist","traverseTree","data","tempChild","tempTitle","tempChildList","hasOwnProperty","React","createElement","key","content","setAttribute","length","onDrop","onDragOver","onDragStart","onDragEnd","push","type","renderList","Header","Main","state","idIndexMap","parentChildMap","count","addCurriculum","bind","deleteCurriculumNode","insertCurriculumNode","updateCurriculumTree","generatePath","outdentCurriculumNode","indentCurriculumNode","mapParentChildId","mapIdIndex","updateMap","tempCurriculumList","this","tempParentChildMap","tempIdIndexMap","setState","parent","Number","index","path","tempData","pop","splice","newNode","newTitle","childNode","pathIndex","newCurriculum","text","srcPath","destPath","deletedNode","sourceId","destinationId","href","encodeURIComponent","JSON","stringify","download","Component","App","Boolean","window","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c0bb66fb.chunk.js","sourcesContent":["import React from \"react\";\nimport ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\nimport ArrowForwardIcon from \"@material-ui/icons/ArrowForward\";\nimport DragIndicatorIcon from \"@material-ui/icons/DragIndicator\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\n// import \"../shared/style.css\";\n\nconst ListItem = (props) => {\n\n    function indentCurriculum() {\n        props.indentCurriculum(props.curriculumId)\n    }\n\n    function outdentCurriculum() {\n        props.outdentCurriculum(props.curriculumId)\n    }\n\n    function deleteCurriculum() {\n        props.deleteCurriculum(props.curriculumId)\n    }\n\n    function updateCurriculum(event) {\n        props.updateCurriculum(props.curriculumId, event.target.value)\n    }\n\n    function enableDrag() {\n        props.enableDrag(props.curriculumId)\n    }\n\n    function disableDrag() {\n        props.disableDrag(props.curriculumId)\n    }\n\n    function handleChangeEvent(val) {\n        return val\n    }\n\n    return(\n        <div className=\"container\">\n            <div className=\"col-2 icons-set\">\n                <button className=\"icon-button\" onMouseDown={enableDrag}>\n                    <DragIndicatorIcon />\n                </button>\n                <button className=\"icon-button\" onClick={outdentCurriculum} >\n                    <ArrowBackIcon />\n                </button>\n                <button className=\"icon-button\" onClick={indentCurriculum} >\n                    <ArrowForwardIcon />\n                </button>\n                <button className=\"icon-button\" onClick={deleteCurriculum} >\n                    <DeleteIcon />\n                </button>\n            </div>\n            <div className=\"col-2\">\n                <div className=\"buffer-space\"></div>\n            </div>\n            <div className=\"col-10 list-content\">\n                <div className=\"divider\" ></div>\n                <div className=\"list-text\">\n                    <input \n                        defaultValue={props.curriculumContent} \n                        placeholder=\"Enter curriculum\" \n                        onChange={() => handleChangeEvent(props.curriculumContent)}\n                        onBlur={updateCurriculum}\n                    />\n                </div>\n            </div>\n        </div>\n        // props.curriculumContent\n    );\n}\n\nexport default ListItem;","import React from \"react\";\nimport ListItem from './ListItemComponent';\n// import '../shared/style.css';\n\nconst List = (props) => {\n\n    // For Drag and drop\n\n\n    function enableDrag(id) {\n        // console.log(\"enable drag\", id)\n        document.querySelector('[data-id=\"'+id+'\"]').setAttribute(\"draggable\", \"true\")\n    }\n\n    function disableDrag(e) {\n        if (e.stopPropagation) {\n            e.stopPropagation(); \n        }\n        e.currentTarget.removeAttribute(\"draggable\")\n        // console.log(\"disable drag\", e.currentTarget.dataset.id)\n    }\n\n    function drag(e) {\n        e.dataTransfer.setData(\"text\", e.target.dataset.id);\n    }\n    \n    function allowDrop(e) {\n      if (e.preventDefault) {\n        e.preventDefault(); \n      }\n    }\n    \n    function drop(e) {\n    \n        if (e.stopPropagation) {\n            e.stopPropagation(); \n        }\n        \n        var srcElmnt, destElmnt, srcId, destId, srcElmntCopy;\n\n        srcId = e.dataTransfer.getData(\"text\");\n        destId = e.currentTarget.dataset.id;\n        \n        // console.log(srcId, destId);\n\n        if (srcId !== destId) {\n            // srcElmnt = document.querySelector('[data-id=\"'+srcId+'\"]');\n            // srcElmntCopy = srcElmnt;  \n            // srcElmnt.remove();\n            // destElmnt = document.querySelector('[data-id=\"'+destId+'\"]');\n            // destElmnt.parentNode.insertBefore(srcElmntCopy, destElmnt.nextSibling);\n\n            props.moveCurriculum(srcId, destId);\n            document.querySelector('[data-id=\"'+srcId+'\"]').removeAttribute(\"draggable\")\n        }\n    }\n\n\n    function renderList({curriculumlist, deleteCurriculum, indentCurriculum, outdentCurriculum, updateCurriculum}) {\n       \n        function traverseTree(data) {\n            var tempChildList = [], tempChild, tempTitle;\n            if (data.hasOwnProperty(\"child\")){\n\n                tempTitle = React.createElement(\"div\", {key: data[\"id\"]}, \n                <ListItem\n                    key={data[\"id\"]}\n                    curriculumId={data[\"id\"]}\n                    curriculumContent={data[\"title\"]}\n                    deleteCurriculum={(id) => deleteCurriculum(id)}\n                    indentCurriculum={(id) => indentCurriculum(id)}\n                    outdentCurriculum={(id) => outdentCurriculum(id)}\n                    updateCurriculum={(id, content) => updateCurriculum(id, content)}\n                    enableDrag={(id) => enableDrag(id)}\n                    // disableDrag={(id) => disableDrag(id)}\n                />)\n               \n                if(data[\"child\"].length > 0) {\n                    tempChildList = traverseTree(data[\"child\"])\n                    return React.createElement(\"li\", {\n                        className: \"dd-item\", \n                        'data-id': data[\"id\"], \n                        // draggable:\"true\", \n                        onDrop: drop,\n                        onDragOver: allowDrop,\n                        onDragStart: drag,\n                        onDragEnd: disableDrag\n                    }, [tempTitle, tempChildList]) \n                    \n                } else {\n                    return React.createElement(\"li\", {\n                        className: \"dd-item\", \n                        'data-id': data[\"id\"], \n                        // draggable:\"true\",\n                        onDrop: drop,\n                        onDragOver: allowDrop,\n                        onDragStart: drag,\n                        onDragEnd: disableDrag\n                    }, tempTitle)\n                }\n            }\n            else {\n                for(var key in data) {\n                    tempChild = traverseTree(data[key])\n                    tempChildList.push(tempChild)\n                }\n                return React.createElement(\"ul\", {className: \"dd-list\", type: \"none\"}, tempChildList)\n            }\n          }\n\n        return(\n           traverseTree(curriculumlist)\n        )\n    }\n\n   // console.log(props.curriculumlist)\n\n    return(\n        <div className=\"list-container\">\n            { renderList(props) }\n        </div>\n    );\n}\n\nexport default List;","import React from 'react';\n// import '../shared/style.css';\n\nconst Header = () => {\n\n    return(\n        <>\n        <div className=\"course-name\">\n            MATHEMATICS\n        </div>\n        <div className=\"header container\">\n            <div className=\"col-2\">\n                <div className=\"title\">Actions</div>\n                <div className=\"subtitle\">\n                    Move, Indent, Outdent, Delete\n                </div>\n            </div>\n            <div className=\"col-10\">\n                <div className=\"title\">Standard</div>\n                <div className=\"subtitle\">\n                    The text of the standard\n                </div>\n            </div>\n        </div>\n       </>\n    )\n}\n\nexport default Header;","import React, { Component } from \"react\";\nimport List from \"./ListComponent\";\nimport Header from \"./HeaderComponent\";\nimport data from \"../shared/data.json\";\nimport AddCircleOutlineIcon from \"@material-ui/icons/AddCircleOutline\";\nimport SaveAltIcon from \"@material-ui/icons/SaveAlt\";\n\nclass Main extends Component {\n\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            curriculumlist : data[\"curriculum\"],\n            idIndexMap: {},\n            parentChildMap: {},\n            count: 6\n        }\n\n        this.addCurriculum = this.addCurriculum.bind(this)\n        this.deleteCurriculum = this.deleteCurriculum.bind(this)\n        this.updateCurriculum = this.updateCurriculum.bind(this)\n        this.moveCurriculum = this.moveCurriculum.bind(this)\n        this.indentCurriculum = this.indentCurriculum.bind(this)\n        this.outdentCurriculum = this.outdentCurriculum.bind(this)\n\n        this.deleteCurriculumNode = this.deleteCurriculumNode.bind(this)\n        this.insertCurriculumNode = this.insertCurriculumNode.bind(this)\n        this.updateCurriculumTree = this.updateCurriculumTree.bind(this)\n        this.generatePath = this.generatePath.bind(this)\n        this.outdentCurriculumNode = this.outdentCurriculumNode.bind(this)\n        this.indentCurriculumNode = this.indentCurriculumNode.bind(this)\n        this.mapParentChildId = this.mapParentChildId.bind(this)\n        this.mapIdIndex = this.mapIdIndex.bind(this)\n        this.updateMap = this.updateMap.bind(this)\n    }\n\n    // componentDidMount() {\n    //     var items = document.querySelectorAll(\"ul\");\n    //     items.forEach(item => {\n    //         item.draggable = true\n    //         item.addEventListener(\"dragover\", (event) => {\n    //             console.log(event.target.innerHTML)\n    //         }, true)\n    //     })\n    // }\n\n    updateMap() {\n        var tempCurriculumList = this.state.curriculumlist\n        var tempParentChildMap = this.state.parentChildMap\n        var tempIdIndexMap = this.state.idIndexMap\n\n        this.mapParentChildId(0, tempParentChildMap, tempCurriculumList)\n        this.mapIdIndex(null, tempIdIndexMap, tempCurriculumList)\n        this.setState({\n            parentChildMap: tempParentChildMap,\n            idIndexMap: tempIdIndexMap\n        })\n    }\n\n\n    UNSAFE_componentWillMount() {\n        var tempCurriculumList = this.state.curriculumlist\n        var tempParentChildMap = this.state.parentChildMap\n        var tempIdIndexMap = this.state.idIndexMap\n\n        this.mapParentChildId(0, tempParentChildMap, tempCurriculumList)\n        this.mapIdIndex(null, tempIdIndexMap, tempCurriculumList)\n        this.setState({\n            parentChildMap: tempParentChildMap,\n            idIndexMap: tempIdIndexMap\n        })\n    }\n\n    mapParentChildId(parent, parentChildMap, data) {\n        if (data.hasOwnProperty(\"child\")){\n            \n            parentChildMap[data[\"id\"]] = Number(parent)\n            \n            if(data[\"child\"].length > 0) {\n                parent = data[\"id\"]\n                this.mapParentChildId(parent, parentChildMap, data[\"child\"])\n            } \n        }\n        else {\n            for(var key in data) {\n                this.mapParentChildId(parent, parentChildMap, data[key])\n            }\n        }\n    }\n\n    mapIdIndex(index, idIndexMap, data) {\n        if (data.hasOwnProperty(\"child\")){\n            \n            idIndexMap[data[\"id\"]] = Number(index)\n            \n            if(data[\"child\"].length > 0) {\n                this.mapIdIndex(null, idIndexMap, data[\"child\"])\n            } \n        }\n        else {\n            for(var key in data) {\n                this.mapIdIndex(key, idIndexMap, data[key])\n            }\n        }\n    }\n\n\n    generatePath(id, idIndexMap, parentChildMap) {\n        var path = [];\n        while(parentChildMap[id] !== 0) {\n            path.push(idIndexMap[id])\n            id = parentChildMap[id]\n        }\n        path.push(idIndexMap[id])\n    \n        return path;\n    }\n\n    deleteCurriculumNode(path, data) {\n        var pathIndex, tempData\n        if( path.length > 1){\n            pathIndex = path.pop()\n            tempData = data[pathIndex][\"child\"]\n            return this.deleteCurriculumNode(path, tempData)\n        } else if ( path.length == 1) {\n            return data.splice(path[0], 1)\n        } else\n            return null;\n    }\n\n    insertCurriculumNode(path, newNode, data) {\n        var pathIndex, tempData\n        if( path.length > 1){\n            pathIndex = path.pop()\n            tempData = data[pathIndex][\"child\"]\n            this.insertCurriculumNode(path, newNode, tempData)\n        } else if ( path.length == 1) {\n            data.splice(path[0]+1, 0, newNode[0])\n        } else\n            return null;\n    }\n\n    updateCurriculumTree(id, newTitle, data) {\n        if (data.hasOwnProperty(\"child\")){\n            if(data[\"id\"] == id) {\n                data[\"title\"] = newTitle\n                return;\n            } else if(data[\"child\"].length > 0) {\n                this.updateCurriculumTree(id, newTitle, data[\"child\"])\n            }\n        }\n        else {\n            for(var key in data) {\n                this.updateCurriculumTree(id, newTitle, data[key])\n            }\n        }\n    }\n\n    outdentCurriculumNode(path, data) {\n        var childNode, pathIndex, tempData\n        if( path.length > 2 ){\n            pathIndex = path.pop()\n            tempData = data[pathIndex][\"child\"]\n            this.outdentCurriculumNode(path, tempData)\n        } else if ( path.length == 2 ) {\n            pathIndex = path.pop()\n            childNode = data[pathIndex][\"child\"][path[0]]\n            data[pathIndex][\"child\"].splice(path[0], 1)\n            data.splice(pathIndex+1, 0, childNode)\n        } else\n            return;\n    }\n\n    indentCurriculumNode(path, data) {\n        var childNode, pathIndex, tempData\n        if( path.length > 1){\n            pathIndex = path.pop()\n            tempData = data[pathIndex][\"child\"]\n            this.indentCurriculumNode(path, tempData)\n        } else if ( path.length == 1 && path[0] > 0 ) {\n            childNode = data[path[0]]\n            data.splice(path[0], 1)\n            data[path[0]-1][\"child\"].push(childNode)\n        } else\n            return;\n    }\n\n    addCurriculum() {\n        var newCurriculum = {\n            \"id\": this.state.count,\n            \"title\": \"Enter Curriculum\",\n            \"child\": []\n        }\n\n        var tempCurriculumList = this.state.curriculumlist\n\n        tempCurriculumList.push(newCurriculum)\n\n        this.setState({\n            count: this.state.count + 1,\n            curriculumlist: tempCurriculumList\n        })\n\n        this.updateMap()\n    }\n\n    deleteCurriculum(id) {\n        var tempCurriculumList = this.state.curriculumlist\n        var path = this.generatePath(id, this.state.idIndexMap, this.state.parentChildMap)\n        this.deleteCurriculumNode(path, tempCurriculumList)\n\n        this.setState({\n            curriculumlist: tempCurriculumList\n        })\n\n        this.updateMap()\n    }\n\n    updateCurriculum(id, text) {\n        var tempCurriculumList = this.state.curriculumlist\n\n        this.updateCurriculumTree(id, text, tempCurriculumList)\n\n        this.setState({\n            curriculumlist: tempCurriculumList\n        })\n    }\n\n    indentCurriculum(id) {\n        var tempCurriculumList = this.state.curriculumlist\n        var path = this.generatePath(id, this.state.idIndexMap, this.state.parentChildMap)\n        this.indentCurriculumNode(path, tempCurriculumList)\n        this.setState({\n            curriculumlist: tempCurriculumList\n        })\n\n        this.updateMap()\n    }\n\n    outdentCurriculum(id) {\n        var tempCurriculumList = this.state.curriculumlist\n        var path = this.generatePath(id, this.state.idIndexMap, this.state.parentChildMap)\n        this.outdentCurriculumNode(path, tempCurriculumList)\n        this.setState({\n            curriculumlist: tempCurriculumList\n        })\n\n        this.updateMap()\n    }\n\n\n    moveCurriculum(srcId, destId) {\n        // delete the node\n        // insert the node \n        // update the mappings\n\n        var tempCurriculumList = this.state.curriculumlist\n        var srcPath = this.generatePath(srcId, this.state.idIndexMap, this.state.parentChildMap)\n        var destPath = this.generatePath(destId, this.state.idIndexMap, this.state.parentChildMap)\n\n        var deletedNode = this.deleteCurriculumNode(srcPath, tempCurriculumList)\n\n        this.insertCurriculumNode(destPath, deletedNode, tempCurriculumList)\n\n        this.setState({\n            curriculumlist: tempCurriculumList\n        })\n\n        this.updateMap()\n    }\n\n    render () {\n        return(\n            <div className=\"container course\">\n                <div className=\"col-2\"></div>\n                <div className=\"col-8\">\n                    <Header />\n                    <List \n                        curriculumlist={this.state.curriculumlist} \n                        deleteCurriculum={(id) => this.deleteCurriculum(id)}\n                        indentCurriculum={(id) => this.indentCurriculum(id)}\n                        outdentCurriculum={(id) => this.outdentCurriculum(id)}\n                        updateCurriculum={(id, content) => this.updateCurriculum(id, content)}\n                        moveCurriculum={(sourceId, destinationId) => this.moveCurriculum(sourceId, destinationId)}\n                    />\n                    <button className=\"button flex-container\" onClick={this.addCurriculum}>\n                        <div className=\"button-icon\">\n                            <AddCircleOutlineIcon /> \n                        </div>\n                        <div className=\"button-text\">Add a standard</div>\n                    </button>\n                    <a href={\"data:text/json;charset=utf-8,\"+ encodeURIComponent(JSON.stringify({\"curriculum\": this.state.curriculumlist}))} download=\"data.json\">\n                        <button className=\"button flex-container\">\n                            <div className=\"button-icon\">\n                                <SaveAltIcon /> \n                            </div>\n                            <div className=\"button-text\">Download JSON data</div>\n                        </button>\n                    </a>\n                </div>\n                <div className=\"col-2\"></div>\n            </div>\n        );\n    }\n}\n\nexport default Main;","import React from 'react';\nimport Main from './components/MainContainer';\nimport './shared/style.css';\n\nfunction App() {\n  return (\n    <Main/>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}